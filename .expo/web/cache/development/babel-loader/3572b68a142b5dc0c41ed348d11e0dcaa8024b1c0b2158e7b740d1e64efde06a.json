{"ast":null,"code":"import Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { textinput } from \"../../styles/styles\";\nimport { FontAwesome } from \"@expo/vector-icons\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar InputText = function InputText(props) {\n  var name = props.name,\n    placeHolder = props.placeHolder,\n    required = props.required,\n    value = props.value,\n    setValue = props.setValue;\n  return _jsxs(_Fragment, {\n    children: [_jsxs(View, {\n      style: textinput.textView,\n      children: [_jsx(Text, {\n        style: textinput.text,\n        children: name\n      }), required && _jsx(FontAwesome, {\n        name: \"asterisk\",\n        size: 24,\n        style: textinput.etoile\n      })]\n    }), _jsx(View, {\n      children: _jsx(TextInput, {\n        style: textinput.input,\n        placeholder: placeHolder,\n        placeholderTextColor: \"white\",\n        value: value,\n        onChangeText: function onChangeText(val) {\n          {\n            setValue ? setValue(val) : null;\n          }\n        },\n        onBlur: function onBlur() {}\n      })\n    })]\n  });\n};\nexport default InputText;","map":{"version":3,"names":["textinput","FontAwesome","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","InputText","props","name","placeHolder","required","value","setValue","children","View","style","textView","Text","text","size","etoile","TextInput","input","placeholder","placeholderTextColor","onChangeText","val","onBlur"],"sources":["C:/Users/33765/Desktop/PayTonkawa/components/TheLogin/InputTextComponent/InputText.js"],"sourcesContent":["import { Text, TextInput, TouchableOpacity, View } from \"react-native\";\r\nimport { textinput } from \"../../styles/styles\";\r\nimport { FontAwesome } from \"@expo/vector-icons\";\r\n\r\n// type textProps = {\r\n//   name: string;\r\n//   placeHolder: string;\r\n//   required: boolean;\r\n//   value: string;\r\n//   setValue:React.Dispatch<React.SetStateAction<string>>\r\n// };\r\n\r\nconst InputText = (props) => {\r\n  const { name, placeHolder, required, value, setValue } = props;\r\n  return (\r\n    <>\r\n      <View style={textinput.textView}>\r\n        <Text style={textinput.text}>{name}</Text>\r\n        {required && (\r\n          <FontAwesome name=\"asterisk\" size={24} style={textinput.etoile} />\r\n        )}\r\n      </View>\r\n      <View>\r\n        <TextInput\r\n          style={textinput.input}\r\n          placeholder={placeHolder}\r\n          placeholderTextColor=\"white\"\r\n          value={value}\r\n          onChangeText={(val) => {\r\n            {\r\n              setValue ? setValue(val) : null;\r\n            }\r\n          }}\r\n          onBlur={() => {}}\r\n        />\r\n      </View>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InputText;\r\n"],"mappings":";;;;AACA,SAASA,SAAS;AAClB,SAASC,WAAW,QAAQ,oBAAoB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAUjD,IAAMC,SAAS,GAAG,SAAZA,SAASA,CAAIC,KAAK,EAAK;EAC3B,IAAQC,IAAI,GAA6CD,KAAK,CAAtDC,IAAI;IAAEC,WAAW,GAAgCF,KAAK,CAAhDE,WAAW;IAAEC,QAAQ,GAAsBH,KAAK,CAAnCG,QAAQ;IAAEC,KAAK,GAAeJ,KAAK,CAAzBI,KAAK;IAAEC,QAAQ,GAAKL,KAAK,CAAlBK,QAAQ;EACpD,OACET,KAAA,CAAAE,SAAA;IAAAQ,QAAA,GACEV,KAAA,CAACW,IAAI;MAACC,KAAK,EAAEjB,SAAS,CAACkB,QAAS;MAAAH,QAAA,GAC9BZ,IAAA,CAACgB,IAAI;QAACF,KAAK,EAAEjB,SAAS,CAACoB,IAAK;QAAAL,QAAA,EAAEL;MAAI,EAAQ,EACzCE,QAAQ,IACPT,IAAA,CAACF,WAAW;QAACS,IAAI,EAAC,UAAU;QAACW,IAAI,EAAE,EAAG;QAACJ,KAAK,EAAEjB,SAAS,CAACsB;MAAO,EAChE;IAAA,EACI,EACPnB,IAAA,CAACa,IAAI;MAAAD,QAAA,EACHZ,IAAA,CAACoB,SAAS;QACRN,KAAK,EAAEjB,SAAS,CAACwB,KAAM;QACvBC,WAAW,EAAEd,WAAY;QACzBe,oBAAoB,EAAC,OAAO;QAC5Bb,KAAK,EAAEA,KAAM;QACbc,YAAY,EAAE,SAAAA,aAACC,GAAG,EAAK;UACrB;YACEd,QAAQ,GAAGA,QAAQ,CAACc,GAAG,CAAC,GAAG,IAAI;UACjC;QACF,CAAE;QACFC,MAAM,EAAE,SAAAA,OAAA,EAAM,CAAC;MAAE;IACjB,EACG;EAAA,EACN;AAEP,CAAC;AAED,eAAerB,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}